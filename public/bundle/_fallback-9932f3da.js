
(function(l, r) { if (l.getElementById('livereloadscript')) return; r = l.createElement('script'); r.async = 1; r.src = '//' + (window.location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1'; r.id = 'livereloadscript'; l.head.appendChild(r) })(window.document);
import { S as SvelteComponentDev, a as init, s as safe_not_equal, d as dispatch_dev, v as validate_store, c as component_subscribe, z as element, H as space, D as text, E as attr_dev, A as add_location, b as insert_dev, C as append_dev, n as noop, j as detach_dev } from './index-4e59569a.js';
import { u as url } from './index-5bd4e51a.js';

/* src\pages\example\_fallback.svelte generated by Svelte v3.16.4 */
const file = "src\\pages\\example\\_fallback.svelte";

function create_fragment(ctx) {
	let div2;
	let div0;
	let t1;
	let div1;
	let t2;
	let a;
	let t3;
	let a_href_value;

	const block = {
		c: function create() {
			div2 = element("div");
			div0 = element("div");
			div0.textContent = "404";
			t1 = space();
			div1 = element("div");
			t2 = text("Page not found. \r\n  \r\n  ");
			a = element("a");
			t3 = text("Go back");
			attr_dev(div0, "class", "huge svelte-1hsahkb");
			add_location(div0, file, 18, 2, 286);
			attr_dev(a, "href", a_href_value = /*$url*/ ctx[0]("../"));
			add_location(a, file, 21, 2, 412);
			attr_dev(div1, "class", "big");
			add_location(div1, file, 19, 2, 317);
			attr_dev(div2, "class", "e404 svelte-1hsahkb");
			add_location(div2, file, 17, 0, 264);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, div2, anchor);
			append_dev(div2, div0);
			append_dev(div2, t1);
			append_dev(div2, div1);
			append_dev(div1, t2);
			append_dev(div1, a);
			append_dev(a, t3);
		},
		p: function update(ctx, dirty) {
			if (dirty[0] & /*$url*/ 1 && a_href_value !== (a_href_value = /*$url*/ ctx[0]("../"))) {
				attr_dev(a, "href", a_href_value);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div2);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let $url;
	validate_store(url, "url");
	component_subscribe($$self, url, $$value => $$invalidate(0, $url = $$value));

	$$self.$capture_state = () => {
		return {};
	};

	$$self.$inject_state = $$props => {
		if ("$url" in $$props) url.set($url = $$props.$url);
	};

	return [$url];
}

class Fallback extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Fallback",
			options,
			id: create_fragment.name
		});
	}
}

export default Fallback;
//# sourceMappingURL=_fallback-9932f3da.js.map
